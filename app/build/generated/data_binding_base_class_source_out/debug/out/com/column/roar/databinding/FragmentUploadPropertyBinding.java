// Generated by data binding compiler. Do not edit!
package com.column.roar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.column.roar.R;
import com.column.roar.cloudModel.FirebaseProperty;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentUploadPropertyBinding extends ViewDataBinding {
  @NonNull
  public final TextInputLayout campus;

  @NonNull
  public final AutoCompleteTextView campusSpinner;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final TextInputLayout desc;

  @NonNull
  public final ImageView firstImage;

  @NonNull
  public final ImageView manageBckBtn;

  @NonNull
  public final LinearLayout managePhotoRecycler;

  @NonNull
  public final NestedScrollView nestedScrollView4;

  @NonNull
  public final TextInputLayout ownerCont;

  @NonNull
  public final TextInputEditText ownerContact;

  @NonNull
  public final TextInputLayout price;

  @NonNull
  public final TextInputEditText productPrice;

  @NonNull
  public final AutoCompleteTextView productSpinner;

  @NonNull
  public final TextInputLayout productType;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputEditText propertyDesc;

  @NonNull
  public final TextInputEditText propertyTitle;

  @NonNull
  public final MaterialButton submitProperty;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextInputLayout title;

  @Bindable
  protected FirebaseProperty mLodgeProperty;

  protected FragmentUploadPropertyBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextInputLayout campus, AutoCompleteTextView campusSpinner,
      ConstraintLayout constraintLayout3, TextInputLayout desc, ImageView firstImage,
      ImageView manageBckBtn, LinearLayout managePhotoRecycler, NestedScrollView nestedScrollView4,
      TextInputLayout ownerCont, TextInputEditText ownerContact, TextInputLayout price,
      TextInputEditText productPrice, AutoCompleteTextView productSpinner,
      TextInputLayout productType, ProgressBar progressBar, TextInputEditText propertyDesc,
      TextInputEditText propertyTitle, MaterialButton submitProperty, TextView textView17,
      TextInputLayout title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.campus = campus;
    this.campusSpinner = campusSpinner;
    this.constraintLayout3 = constraintLayout3;
    this.desc = desc;
    this.firstImage = firstImage;
    this.manageBckBtn = manageBckBtn;
    this.managePhotoRecycler = managePhotoRecycler;
    this.nestedScrollView4 = nestedScrollView4;
    this.ownerCont = ownerCont;
    this.ownerContact = ownerContact;
    this.price = price;
    this.productPrice = productPrice;
    this.productSpinner = productSpinner;
    this.productType = productType;
    this.progressBar = progressBar;
    this.propertyDesc = propertyDesc;
    this.propertyTitle = propertyTitle;
    this.submitProperty = submitProperty;
    this.textView17 = textView17;
    this.title = title;
  }

  public abstract void setLodgeProperty(@Nullable FirebaseProperty lodgeProperty);

  @Nullable
  public FirebaseProperty getLodgeProperty() {
    return mLodgeProperty;
  }

  @NonNull
  public static FragmentUploadPropertyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_upload_property, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentUploadPropertyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentUploadPropertyBinding>inflateInternal(inflater, R.layout.fragment_upload_property, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentUploadPropertyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_upload_property, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentUploadPropertyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentUploadPropertyBinding>inflateInternal(inflater, R.layout.fragment_upload_property, null, false, component);
  }

  public static FragmentUploadPropertyBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentUploadPropertyBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentUploadPropertyBinding)bind(component, view, R.layout.fragment_upload_property);
  }
}
